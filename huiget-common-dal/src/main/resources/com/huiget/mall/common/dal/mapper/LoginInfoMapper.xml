<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.huiget.mall.common.dal.mapper.LoginInfoMapper">
	
    <resultMap type="loginInfo" id="loginInfoResult">
		<result property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="userName" column="user_name"/>
		<result property="loginType" column="login_type"/>
		<result property="password" column="password"/>
		<result property="lastLoginTime" column="last_login_time"/>
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="lastUpdateTime" column="last_update_time" />
		<result property="updater" column="updater" />
	</resultMap>
	
    <select id="queryByUserNameAndPassword" resultMap="loginInfoResult">  
       select id, user_id, user_name, login_type, password, last_login_time, create_time, creator, last_update_time, updater 
       from login_info where user_name = #{userName} and password = #{password}
    </select>
    
    <select id="queryByUserName" parameterType="string" resultMap="loginInfoResult">
       select id, user_id, user_name, login_type, password, last_login_time, create_time, creator, last_update_time, updater from 
       login_info where user_name = #{userName}
    </select>
    
    <select id="queryByUserId" parameterType="int" resultMap="loginInfoResult">
       select id, user_id, user_name, login_type, password, last_login_time, create_time, creator, last_update_time, updater 
       from login_info where user_id = #{userId}
    </select>
    
    <select id="queryByUserIdAndLoginType" resultMap="loginInfoResult">
       select id, user_id, user_name, login_type, password, last_login_time, create_time, creator, last_update_time, updater 
       from login_info where user_id = #{userId} and login_type = #{loginType}
    </select>
    
    <select id="queryById" parameterType="int" resultMap="loginInfoResult">
       select id, user_id, user_name, login_type, password, last_login_time, create_time, creator, last_update_time, updater
       from login_info where id = #{id}
    </select>
    
    <insert id="insert" parameterType="loginInfo" useGeneratedKeys="true" keyProperty="id">
		insert into login_info (user_id, user_name, login_type, password, last_login_time, create_time, creator, last_update_time, updater) 
		values (#{userId}, #{userName}, #{loginType}, #{password}, #{lastLoginTime}, #{createTime}, #{creator}, #{lastUpdateTime}, #{updater})
	</insert>
	
	<delete id="deleteById">
		delete from login_info where id = #{id}
	</delete>
	
	<update id="updatePassword" parameterType="loginInfo">
		update login_info set password = #{password}, last_update_time = #{lastUpdateTime} where user_id = #{userId}
	</update>
	
	<update id="updateUserName" parameterType="loginInfo">
		update login_info set user_name = #{userName}, last_update_time = #{lastUpdateTime} 
		where user_id = #{userId} and login_type = #{loginType}
	</update>
	
	<update id="updateLastLoginTime" parameterType="loginInfo">
		update login_info set last_login_time = #{lastLoginTime}, last_update_time = #{lastUpdateTime}, updater = #{updater} where id = #{id}
	</update>
</mapper>